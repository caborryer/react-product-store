{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/user/Desktop/client/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n      }\n\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/user/Desktop/client/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {storeProducts, detailProduct} from \"./data\";\r\n\r\nconst ProductContext = React.createContext();\r\n\r\n\r\nclass ProductProvider extends Component {\r\n    state={\r\n        products: [],\r\n        detailProduct: detailProduct,\r\n        cart : [],\r\n        modalOpen:false,\r\n        modalProduct:detailProduct,\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0,\r\n    };\r\n    componentDidMount() {\r\n        this.setProducts()\r\n    }\r\n\r\n    setProducts = () => {\r\n        let tempProducts = [];\r\n        storeProducts.forEach(item =>{\r\n            const singleItem = {...item};\r\n            tempProducts = [...tempProducts, singleItem];\r\n        })\r\n        this.setState(() =>{\r\n            return {products: tempProducts}\r\n        })\r\n    }\r\n    getItem = (id) => {\r\n        const product = this.state.products.find(item => item.id ===id);\r\n        return product\r\n    }\r\n    handleDetail = (id) =>{\r\n       const product = this.getItem(id);\r\n       this.setState(() => {\r\n           return{detailProduct:product}\r\n       })\r\n    }\r\n    addToCart = id =>{\r\n       let tempProducts = [...this.state.products]\r\n        const index = tempProducts.indexOf(this.getItem(id));\r\n       const product = tempProducts[index];\r\n       product.inCart = true;\r\n       product.count =1;\r\n       const price = product.price;\r\n       product.total = price;\r\n       this.setState(()=>{\r\n           return {products: tempProducts, cart:[...this.state.cart, product]}\r\n       }, () =>{\r\n           this.addTotals();\r\n       })\r\n    }\r\n    openModal = id => {\r\n        const product = this.getItem(id);\r\n        this.setState(() =>{\r\n            return {modalProduct:product, modalOpen: true}\r\n        })\r\n    }\r\n    closeModal = () => {\r\n        this.setState(() =>{\r\n            return{modalOpen: false}\r\n        })\r\n    }\r\n\r\n    increment = (id) => {\r\n        let tempCart = [...this.state.cart];\r\n        const selectedProduct = tempCart.find(item => item.id === id)\r\n\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n\r\n        product.count = product.count + 1;\r\n        product.total = product.count * product.price;\r\n\r\n        this.setState(()=>{\r\n            return { cart:[...tempCart]}\r\n        }, ()=>{this.addTotals()})\r\n    }\r\n    decrement = id => {\r\n        let tempCart = [...this.state.cart];\r\n        const selectedProduct = tempCart.find(item => item.id === id)\r\n\r\n        const index = tempCart.indexOf(selectedProduct);\r\n        const product = tempCart[index];\r\n        product.count = product.count - 1;\r\n\r\n        if(product.count === 0){\r\n            this.removeItem(id)\r\n        }else {\r\n            product.total = product.count * product.price;\r\n        }\r\n\r\n        this.setState(()=>{\r\n            return { cart:[...tempCart]}\r\n        }, ()=>{this.addTotals()})\r\n    }\r\n    removeItem= (id) => {\r\n       let tempProducts = [...this.state.products];\r\n       let tempCart = [...this.state.cart];\r\n       tempCart = tempCart.filter(item => item.id !== id);\r\n\r\n       const index = tempProducts.indexOf(this.getItem(id));\r\n       let removedProduct = tempProducts[index];\r\n       removedProduct.inCart = false;\r\n       removedProduct.count = 0;\r\n       removedProduct.total = 0\r\n\r\n        this.setState(() => {\r\n            return {\r\n                cart:[...tempCart],\r\n                products: [...tempProducts]\r\n            }\r\n        }, ()=>{\r\n            this.addTotals();\r\n        })\r\n    }\r\n    clearCart = () => {\r\n        this.setState(() => {\r\n            return{cart: []}\r\n        }, () =>{\r\n            this.setProducts();\r\n            this.addTotals()\r\n        })\r\n    }\r\n    addTotals = () => {\r\n        let subTotal = 0;\r\n        this.state.cart.map(item => (subTotal += item.total));\r\n        const tempTax = subTotal * 0.1;\r\n        const tax = parseFloat(tempTax.toFixed(2));\r\n        const total = subTotal + tax\r\n        this.setState(()=>{\r\n            return {\r\n                cartSubTotal:subTotal,\r\n                cartTax: tax,\r\n                cartTotal: total\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n           <ProductContext.Provider value={{\r\n               ...this.state,\r\n               handleDetail: this.handleDetail,\r\n               addToCart: this.addToCart,\r\n               openModal: this.openModal,\r\n               closeModal: this.closeModal,\r\n               increment: this.increment,\r\n               decrement: this.decrement,\r\n               removeItem: this.removeItem,\r\n               clearCart: this.clearCart,\r\n\r\n           }}>\r\n               {this.props.children}\r\n           </ProductContext.Provider>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}